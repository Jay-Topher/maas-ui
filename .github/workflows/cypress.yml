name: Cypress
on: [push]
jobs:
  cypress:
    name: Cypress
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x]
    env:
      MAAS_URL: http://localhost:5240
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Install MAAS
        run: |
          sudo systemctl enable snapd
          sudo snap install maas --channel=latest/edge
          sudo snap install maas-test-db --channel=latest/edge
      - name: Initialise MAAS
        run: sudo maas init region+rack --maas-url=${{env.MAAS_URL}}/MAAS --database-uri maas-test-db:///
      - name: Install Cypress
        uses: cypress-io/github-action@v4
      - name: Restore node_modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: CYPRESS_INSTALL_BINARY=0 yarn install
      - name: Run Cypress tests without a user
        run: yarn start-server-and-test start http://localhost:8400 cypress-run-no-users
      - name: Create MAAS admin
        run: sudo maas createadmin --username=admin --password=test --email=fake@example.org
      - name: Create MAAS non-admin user
        run: |
          export API_KEY=`sudo maas apikey --username=admin`
          maas login admin http://localhost:5240/MAAS $API_KEY
          maas admin users create username=user password=test email=fake-user@example.org is_superuser=0
      - name: Run Cypress tests with a user
        run: yarn start-server-and-test start http://localhost:8400 cypress-run-with-users
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Create issue on failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        with:
          filename: .github/ISSUE_TEMPLATE/cypress-failure.md
          update_existing: true
  docs:
    name: maas.io/docs links
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@main
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Run Cypress docs tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          config: baseUrl=http://maas.io/docs
          spec: "cypress/e2e/docs-links/**/*.spec.ts"
      - name: Create issue on failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        with:
          filename: .github/ISSUE_TEMPLATE/maas-io-docs-failed.md
          update_existing: true
